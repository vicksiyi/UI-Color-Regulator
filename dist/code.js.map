{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/code.ts","webpack:///./src/common/convertColor.js","webpack:///./src/common/events.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAA2C;AACuD;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAgB;AACxC;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,kBAAkB;AAClF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,2DAAI;AACZ,+BAA+B,qEAAQ,CAAC,6EAAgB,gBAAgB,uBAAuB;AAC/F;AACA,SAAS;AACT;AACA;AACA,QAAQ,2DAAI;AACZ;AACA;AACA,2BAA2B,6CAA6C;AACxE,2DAAI;AACJ,yDAAE;AACF;AACA,CAAC;AACD,yDAAE;AACF,cAAc,qEAAQ;AACtB,sBAAsB,gFAAmB;AACzC;AACA;AACA;AACA;AACA,wBAAwB;AACxB,SAAS,MAAM,oCAAoC;AACnD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;;;;;;AC1FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,oCAAoC,EAAE,IAAI,EAAE;AAC5C;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,oCAAoC,EAAE,IAAI,EAAE;AAC5C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACO;AACP,SAAS,UAAU;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP,SAAS,UAAU;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,E;;;;;;;;;;;;AC7FA;AAAA;AAAA;AAAA;AAAA;AACA;AACO;AACP,kBAAkB,UAAU;AAC5B;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C","file":"code.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/code.ts\");\n","import { emit, on } from './common/events';\nimport { RGBToHSL, jsDesignRGBToRGB, HSLToRGB, webRGBToJsDesignRGB } from './common/convertColor';\nconst SupportNode = ['FRAME', 'RECTANGLE', 'ELLIPSE', 'LINE', 'POLYGON', 'STAR'];\nconst hasChildrenNode = ['FRAME', 'GROUP'];\nconst loadFonts = [];\nconst selectNode = () => {\n    let selections = jsDesign.currentPage.selection;\n    let selection;\n    for (let node of selections) {\n        if (selection && SupportNode.includes(node.type))\n            jsDesign.notify('已选择多个图层，默认采用最后一个');\n        if (SupportNode.includes(node.type)) {\n            selection = node;\n        }\n    }\n    return selection;\n};\nconst addLoadFont = (fontName) => {\n    if (!loadFonts.map(font => JSON.stringify(font)).includes(JSON.stringify(fontName))) {\n        loadFonts.push(fontName);\n    }\n};\nconst getTextNode = (nodes, fonts) => {\n    for (const node of nodes) {\n        if (node.type === 'TEXT' && node.visible) {\n            addLoadFont(node.fontName);\n            let fillSolid = node.fills.find(attr => attr.type === 'SOLID');\n            let color = jsDesignRGBToRGB(fillSolid.color);\n            fonts.push({\n                content: node.characters,\n                fontFamily: node.fontName,\n                fontSize: node.fontSize,\n                color: `rgba(${color.r},${color.g},${color.b},${fillSolid.opacity})`,\n            });\n        }\n    }\n};\nconst selectChangedHandler = () => {\n    let selection = selectNode();\n    if (selection) {\n        emit('SELECTION_CHANGED', true);\n        let fills = selection.fills;\n        let fillColor;\n        for (let item of fills) {\n            if (item.type === 'SOLID')\n                fillColor = item.color;\n        }\n        let fonts = [];\n        if (hasChildrenNode.includes(selection.type)) {\n            getTextNode(selection.children, fonts);\n        }\n        (async () => {\n            try {\n                for (let item of loadFonts) {\n                    await jsDesign.loadFontAsync(item);\n                }\n            }\n            catch (err) {\n                console.error(err);\n            }\n        })();\n        emit('UPDATE_COLOR', {\n            color: fillColor ? RGBToHSL(jsDesignRGBToRGB(fillColor)) : { h: 0, s: 100, l: 100 },\n            fonts\n        });\n    }\n    else {\n        emit('SELECTION_CHANGED', false);\n    }\n};\njsDesign.showUI(__html__, { width: 440, height: 260, themeColors: true });\nemit('SELECTION_CHANGED', jsDesign.currentPage.selection.length > 0);\non(\"CHANGE_GUI_SIZE\", (guiSize) => {\n    jsDesign.ui.resize(guiSize === null || guiSize === void 0 ? void 0 : guiSize.width, guiSize === null || guiSize === void 0 ? void 0 : guiSize.height);\n});\non(\"APPLY_COLOR\", (hsl) => {\n    let RGB = HSLToRGB(hsl);\n    let jsDesignRGB = webRGBToJsDesignRGB(RGB);\n    let selection = selectNode();\n    if (selection) {\n        selection.fills = selection.fills.length > 0 ? selection.fills.map(fill => {\n            if (fill.type === 'SOLID')\n                return { type: 'SOLID', color: jsDesignRGB };\n        }) : [{ type: 'SOLID', color: jsDesignRGB }];\n    }\n    else {\n        jsDesign.notify('应用失败，未选择含填充色图层');\n    }\n});\njsDesign.on('selectionchange', selectChangedHandler);\nselectChangedHandler();\n","const namesRGB = ['r', 'g', 'b'];\n\nexport const webRGBToJsDesignRGB = (color) => {\n    const rgb = {};\n    namesRGB.forEach((e, i) => {\n        rgb[e] = color[e] / 255;\n    });\n    if (color['a'] !== undefined) rgb['a'] = color['a'];\n    return rgb;\n}\n\n// 十六进制转RGB[JsDesign]\nexport const hexToJsDesignRGB = (color) => {\n    let opacity = '';\n    color = color.toLowerCase();\n    if (color[0] === '#') color = color.slice(1);\n\n    if (color.length === 3) {\n        color = color.replace(/(.)(.)(.)?/g, '$1$1$2$2$3$3');\n    } else if (color.length === 8) {\n        const arr = color.match(/(.{6})(.{2})/);\n        color = arr[1];\n        opacity = arr[2];\n    }\n    const num = parseInt(color, 16);\n    const rgb = { r: num >> 16, g: num >> 8 & 255, b: num & 255 };\n\n    if (opacity) {\n        rgb.push(parseInt(opacity, 16) / 255);\n        return webRGBToJsDesignRGB(rgb);\n    } else {\n        return webRGBToJsDesignRGB(rgb);\n    }\n}\n\n// 十六进制转RGB\nexport const hexToRGB = (hex) => {\n    let opacity = '';\n    color = color.toLowerCase();\n    if (color[0] === '#') color = color.slice(1);\n\n    if (color.length === 3) {\n        color = color.replace(/(.)(.)(.)?/g, '$1$1$2$2$3$3');\n    } else if (color.length === 8) {\n        const arr = color.match(/(.{6})(.{2})/);\n        color = arr[1];\n        opacity = arr[2];\n    }\n    const num = parseInt(color, 16);\n    const rgb = { r: num >> 16, g: num >> 8 & 255, b: num & 255 };\n    return rgb;\n}\n\nexport const jsDesignRGBToRGB = (color) => {\n    const rgb = {};\n    namesRGB.forEach((e, i) => {\n        rgb[e] = color[e] * 255;\n    })\n    return rgb;\n}\n\n// RGB转换为HSL\nexport const RGBToHSL = (color) => {\n    let { r, g, b } = color;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    const l = Math.max(r, g, b);\n    const s = l - Math.min(r, g, b);\n    const h = s\n        ? l === r\n            ? (g - b) / s\n            : l === g\n                ? 2 + (b - r) / s\n                : 4 + (r - g) / s\n        : 0;\n    return {\n        h: 60 * h < 0 ? 60 * h + 360 : 60 * h,\n        s: 100 * (s ? (l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s))) : 0),\n        l: (100 * (2 * l - s)) / 2,\n    };\n};\n\n// HSL转换为RGB\nexport const HSLToRGB = (color) => {\n    let { h, s, l } = color;\n    s /= 100;\n    l /= 100;\n    const k = n => (n + h / 30) % 12;\n    const a = s * Math.min(l, 1 - l);\n    const f = n =>\n        l - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)));\n    return { r: 255 * f(0), g: 255 * f(8), b: 255 * f(4) };\n};","const eventHandlers = {};\nlet currentId = 0;\nexport function on(name, handler) {\n    const id = `${currentId}`;\n    currentId += 1;\n    eventHandlers[id] = { handler, name };\n    return function () {\n        delete eventHandlers[id];\n    };\n}\nexport function once(name, handler) {\n    let done = false;\n    return on(name, function (...args) {\n        if (done === true) {\n            return;\n        }\n        done = true;\n        handler(...args);\n    });\n}\nexport const emit = typeof window === 'undefined'\n    ? function (name, ...args) {\n        jsDesign.ui.postMessage([name, ...args]);\n    }\n    : function (name, ...args) {\n        window.parent.postMessage({\n            pluginMessage: [name, ...args]\n        }, '*');\n    };\nfunction invokeEventHandler(name, args) {\n    for (const id in eventHandlers) {\n        if (eventHandlers[id].name === name) {\n            eventHandlers[id].handler.apply(null, args);\n        }\n    }\n}\nif (typeof window === 'undefined') {\n    jsDesign.ui.onmessage = function ([name, ...args]) {\n        invokeEventHandler(name, args);\n    };\n}\nelse {\n    window.onmessage = function (event) {\n        const [name, ...args] = event.data.pluginMessage;\n        invokeEventHandler(name, args);\n    };\n}"],"sourceRoot":""}